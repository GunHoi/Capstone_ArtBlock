{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport nftData from '../js/nftData';\nexport default {\n  data: function data() {\n    return {\n      interval: 1000,\n      //사진 넘기는 시간(ms) 3초\n      posts: [],\n      imgs: [],\n      streamers: []\n    };\n  },\n  created: function created() {\n    this.getPosts();\n    this.getStreamers();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      this.loading = true;\n\n      for (var i = 0; i < 30; i++) {\n        this.posts.push(nftData[i]);\n      }\n\n      this.loading = false;\n    },\n    getPosts: function getPosts() {\n      for (var i = 0; i < nftData.length; i++) {\n        this.posts.push(nftData[i]);\n      }\n    },\n    getStreamers: function getStreamers() {\n      for (var i = 0; i < nftData.length; i++) {\n        //스트리머 푸시\n        this.streamers.push(nftData[i].streamer);\n      }\n\n      var uniqueArr = [];\n      this.streamers.forEach(function (element) {\n        //중복제거\n        if (!uniqueArr.includes(element)) {\n          uniqueArr.push(element);\n        }\n      });\n\n      for (var i = 0; i < nftData.length; i++) {\n        //스트리머 팝\n        this.streamers.pop(nftData[i].streamer);\n      }\n\n      for (var i = 0; i < uniqueArr.length; i++) {\n        //스트리머에 중복제거 된 값 넣기\n        this.streamers[i] = uniqueArr[i];\n      }\n\n      console.log(this.streamers + \"출력\");\n    },\n    getImgs: function getImgs() {\n      //각 스트리머에 해당하는 img만을 뽑아서 출력해야하는데 지금 post전체이미지 출력중인 문제점.\n      for (var i = 0; i < this.posts.length; i++) {\n        if (this.post.streamer == streamer) this.imgs.push(this.post.img);\n      }\n\n      return this.imgs;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACAA,MADA,kBACA;AACA;AACAC,oBADA;AACA;AACAC,eAFA;AAGAC,cAHA;AAIAC;AAJA;AAMA,GARA;AASAC,SATA,qBASA;AACA;AACA;AACA,GAZA;AAaAC;AACAC,aADA,uBACA;AACA;;AACA;AACA;AACA;;AACA;AACA,KAPA;AAQAC,YARA,sBAQA;AACA;AACA;AACA;AACA,KAZA;AAaAC,gBAbA,0BAaA;AACA;AAAA;AACA;AACA;;AACA;AACA;AAAA;AACA;AACAC;AACA;AACA,OAJA;;AAKA;AAAA;AACA;AACA;;AACA;AAAA;AACA;AACA;;AAEAC;AACA,KA/BA;AAgCAC,WAhCA,qBAgCA;AAAA;AACA;AACA,4CACA;AACA;;AACA;AACA;AAtCA;AAbA","names":["data","interval","posts","imgs","streamers","created","methods","fetchData","getPosts","getStreamers","uniqueArr","console","getImgs"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\r\n   <v-app>\r\n      <v-row>\r\n          <v-btn @click=\"getStreamers\" :style=\"{marginTop:'10px'}\">검색</v-btn>\r\n         <v-col id=\"CARD\" v-for=\"(streamer, index1) in streamers\" :key=\"index1\">   스트리머 : {{streamer}}\r\n            <v-card \r\n               elevation=\"24\"\r\n               max-width=\"4000\"\r\n               class=\"mx-auto\"\r\n            >\r\n               <v-carousel\r\n                  height=\"300\"\r\n                  cycle :interval='interval'\r\n                  hide-delimiter-background\r\n                  show-arrows-on-hover\r\n               >\r\n                  <v-carousel-item\r\n                     v-for=\"(post,index2) in posts\"\r\n                     :key=\"index2\"\r\n                     :src=\"post.streamer==streamer ? post.img : null\" \r\n                     reverse-transition=\"fade-transition\"\r\n                     transition=\"fade-transition\"\r\n                  ></v-carousel-item>\r\n               </v-carousel>\r\n            </v-card>  \r\n         </v-col>\r\n      </v-row>\r\n   </v-app>\r\n</template>\r\n<script>\r\nimport nftData from '../js/nftData' \r\n  export default {\r\n    data () {\r\n      return {\r\n         interval: 1000,   //사진 넘기는 시간(ms) 3초\r\n         posts: [],\r\n         imgs: [],\r\n         streamers:[],\r\n      }\r\n    },\r\n    created(){\r\n       this.getPosts();\r\n       this.getStreamers();\r\n    },\r\n   methods: {\r\n      fetchData() {\r\n        this.loading = true\r\n        for(var i=0; i < 30; i++) {\r\n              this.posts.push(nftData[i])\r\n        }\r\n        this.loading = false\r\n      },\r\n      getPosts() {  \r\n          for(var i=0; i < nftData.length; i++) {\r\n              this.posts.push(nftData[i])\r\n          }\r\n      },\r\n      getStreamers() {\r\n         for(var i=0; i < nftData.length; i++) {      //스트리머 푸시\r\n              this.streamers.push(nftData[i].streamer)\r\n          }\r\n         let uniqueArr = []\r\n         this.streamers.forEach((element) =>{         //중복제거\r\n            if(!uniqueArr.includes(element)){\r\n               uniqueArr.push(element)\r\n            }\r\n         })\r\n         for(var i=0; i < nftData.length; i++) {     //스트리머 팝\r\n              this.streamers.pop(nftData[i].streamer)\r\n          }\r\n         for(var i=0; i<uniqueArr.length; i++){    //스트리머에 중복제거 된 값 넣기\r\n            this.streamers[i] = uniqueArr[i];\r\n         }\r\n\r\n         console.log(this.streamers+\"출력\")\r\n      },\r\n      getImgs(){                     //각 스트리머에 해당하는 img만을 뽑아서 출력해야하는데 지금 post전체이미지 출력중인 문제점.\r\n         for(var i=0; i<this.posts.length; i++){\r\n            if (this.post.streamer==streamer)\r\n               this.imgs.push(this.post.img)\r\n         }\r\n         return this.imgs\r\n      }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}