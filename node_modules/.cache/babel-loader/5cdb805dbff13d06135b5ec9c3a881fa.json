{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n$('.page-indicator > ul > li > a').click(function (e) {\n  var href = $(this).attr('href');\n  var targetTop = $(href).offset().top;\n  /*\n  // 한번에 가도록 하는 방법\n  $(window).scrollTop(targetTop);\n  */\n\n  $('html').stop().animate({\n    scrollTop: targetTop\n  }, 300);\n  e.preventDefault();\n});\n\nfunction Page__updateIndicatorActive() {\n  var scrollTop = $(window).scrollTop(); // 역순으로 검색해야 편하다\n\n  $($('.page').get().reverse()).each(function (index, node) {\n    var $node = $(this);\n    var offsetTop = parseInt($node.attr('data-offset-top'));\n\n    if (scrollTop >= offsetTop) {\n      // 기존 녀석에게 활성화 풀고\n      $('.page-indicator > ul > li.active').removeClass('active'); // 해당하는 녀석에게 활성화 넣고\n\n      var currentPageIndex = $node.index();\n      $('.page-indicator > ul > li').eq(currentPageIndex).addClass('active');\n      $('html').attr('data-current-page-index', currentPageIndex);\n      return false; // 더 이상 다른 페이지를 검사하지 않는다.\n    }\n  });\n} // 각 페이지의 offsetTop 속성을 업데이트\n\n\nfunction Page__updateOffsetTop() {\n  $('.page').each(function (index, node) {\n    var $page = $(node);\n    var offsetTop = $page.offset().top;\n    $page.attr('data-offset-top', offsetTop);\n  }); // 계산이 바뀌었으니까, 다시 상태 업데이트\n\n  Page__updateIndicatorActive();\n}\n\nfunction Page__init() {\n  Page__updateOffsetTop();\n} // 초기화\n\n\nPage__init(); // 화면이 리사이즈 할 때 마다, offsetTop을 다시계산\n\n$(window).resize(Page__updateOffsetTop); // 스크롤이 될 때 마다, 인디케이터의 상태를 갱신\n\n$(window).scroll(Page__updateIndicatorActive);\nexport default {\n  data: function data() {\n    return {\n      items: [{\n        src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg'\n      }, {\n        src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg'\n      }, {\n        src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg'\n      }, {\n        src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg'\n      }]\n    };\n  },\n  methods: {\n    goto: function goto(refName) {\n      var element = this.$refs[refName];\n      var top = element.offsetTop;\n      window.scrollTo(0, top);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAgBAA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEAA;AAAAC;AAAA;AAEAC;AACA,CAbA;;AAeA;AACA,wCADA,CAGA;;AACAF;AACA;AACA;;AAEA;AACA;AACAA,kEAFA,CAGA;;AAEA;AACAA;AAEAA;AAEA,mBAVA,CAUA;AACA;AACA,GAhBA;AAiBA,C,CAEA;;;AACA;AAEAA;AACA;AACA;AAEAG;AACA,GALA,EAFA,CASA;;AACAC;AACA;;AAEA;AACAC;AACA,C,CAEA;;;AACAC,a,CAEA;;AACAN,wC,CAEA;;AACAA;AACA;AACAO,MADA,kBACA;AACA;AACAC,cACA;AACAC;AADA,OADA,EAIA;AACAA;AADA,OAJA,EAOA;AACAA;AADA,OAPA,EAUA;AACAA;AADA,OAVA;AADA;AAgBA,GAlBA;AAmBAC;AACAC,QADA,gBACAC,OADA,EACA;AACA;AACA;AAEAC;AACA;AANA;AAnBA","names":["$","scrollTop","e","$page","Page__updateIndicatorActive","Page__updateOffsetTop","Page__init","data","items","src","methods","goto","refName","window"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\r\n   <v-app>\r\n    <div id=\"app\">\r\n        <button @click=\"goto('div1')\">Div 1</button>\r\n        <button @click=\"goto('div2')\">Div 2</button>\r\n        <button @click=\"goto('div3')\">Div 3</button>\r\n        <br />\r\n\r\n        <div class=\"div\" ref=\"div1\">This is Div 1</div>\r\n        <div class=\"div\" ref=\"div2\">This is Div 2</div>\r\n        <div class=\"div\" ref=\"div3\">This is Div 3</div>\r\n      </div>\r\n\r\n   </v-app>\r\n</template>\r\n<script>\r\n  $('.page-indicator > ul > li > a').click(function(e) {\r\n    var href = $(this).attr('href');\r\n    \r\n    var targetTop = $(href).offset().top;\r\n    \r\n    /*\r\n    // 한번에 가도록 하는 방법\r\n    $(window).scrollTop(targetTop);\r\n    */\r\n    \r\n    $('html').stop().animate({scrollTop:targetTop}, 300);\r\n    \r\n    e.preventDefault();\r\n});\r\n\r\nfunction Page__updateIndicatorActive() {\r\n    var scrollTop = $(window).scrollTop();\r\n    \r\n    // 역순으로 검색해야 편하다\r\n    $($('.page').get().reverse()).each(function(index, node) {\r\n        var $node = $(this);\r\n        var offsetTop = parseInt($node.attr('data-offset-top'));\r\n        \r\n        if ( scrollTop >= offsetTop ) {\r\n            // 기존 녀석에게 활성화 풀고\r\n            $('.page-indicator > ul > li.active').removeClass('active');\r\n            // 해당하는 녀석에게 활성화 넣고\r\n            \r\n            var currentPageIndex = $node.index();\r\n            $('.page-indicator > ul > li').eq(currentPageIndex).addClass('active');\r\n            \r\n            $('html').attr('data-current-page-index', currentPageIndex);\r\n            \r\n            return false; // 더 이상 다른 페이지를 검사하지 않는다.\r\n        }\r\n    });\r\n}\r\n\r\n// 각 페이지의 offsetTop 속성을 업데이트\r\nfunction Page__updateOffsetTop() {\r\n    \r\n    $('.page').each(function(index, node) {\r\n        var $page = $(node);\r\n        var offsetTop = $page.offset().top;\r\n        \r\n        $page.attr('data-offset-top', offsetTop);\r\n    });\r\n    \r\n    // 계산이 바뀌었으니까, 다시 상태 업데이트\r\n    Page__updateIndicatorActive();\r\n}\r\n\r\nfunction Page__init() {\r\n    Page__updateOffsetTop();\r\n}\r\n\r\n// 초기화\r\nPage__init();\r\n\r\n// 화면이 리사이즈 할 때 마다, offsetTop을 다시계산\r\n$(window).resize(Page__updateOffsetTop);\r\n\r\n// 스크롤이 될 때 마다, 인디케이터의 상태를 갱신\r\n$(window).scroll(Page__updateIndicatorActive);\r\n  export default {\r\n    data () {\r\n      return {\r\n        items: [\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\r\n          },\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\r\n          },\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\r\n          },\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\r\n          },\r\n        ],\r\n      }\r\n    },\r\n    methods: {\r\n    goto(refName) {\r\n      var element = this.$refs[refName];\r\n      var top = element.offsetTop;\r\n\r\n      window.scrollTo(0, top);\r\n    }\r\n  }\r\n  \r\n  }\r\n</script>\r\n<style scoped>\r\n.div {\r\n  height: 1000px;\r\n  padding: 20px;\r\n  border: 2px solid yellow;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}